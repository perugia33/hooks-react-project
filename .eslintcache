[{"C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\index.js":"1","C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\App.js":"2","C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\reportWebVitals.js":"3","C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\Components\\TeaComponent.js":"4","C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\Components\\CounterComponent.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":574,"mtime":1607755938248,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1634,"mtime":1607740046650,"results":"10","hashOfConfig":"7"},{"size":796,"mtime":1607755155278,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1vnh9zh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\index.js",[],["24","25"],"C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\App.js",[],"C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\reportWebVitals.js",[],"C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\Components\\TeaComponent.js",["26"],"import './TeaComponent.css';\r\nimport React, {Component} from 'react';\r\n\r\n\r\nclass TeaComponent extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.state = {\r\n        count:this.props.count\r\n        };\r\n        console.log(\"Constructor:\",this);\r\n        this.addButtonHandler= this.addButtonHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n    }\r\n\r\n\r\n    addButtonHandler(){\r\n       \r\n        console.log (\"This.state:\", this.state.count);\r\n        this.setState({\r\n            count: this.state.count + this.props.increment\r\n        }\r\n        )    \r\n    }\r\n\r\n    \r\n    minusButtonHandler(){\r\n        console.log (\"This.state:\", this.state.count);\r\n        this.setState( {\r\n            count: this.state.count - this.props.increment\r\n        }\r\n\r\n        )\r\n    }\r\n\r\n    resetButtonHandler(){\r\n        console.log (\"This.state:\",this.state.count);\r\n        this.setState({\r\n            count: this.state.count = 0\r\n        }\r\n\r\n        )\r\n    }\r\n    render () {\r\n        console.log( \"Props:\",this.props);\r\n        console.log(\"State:\", this.state);\r\n\r\n    \r\n\r\n    return(\r\n        <div className = \"container\">\r\n        <h2> Name: {this.props.item}</h2>\r\n        <h2> Count: {this.state.count} lbs</h2>\r\n        <h2> Count Rate: {this.props.increment}</h2>\r\n    \r\n        <button onClick= {()=> this.addButtonHandler()} > + </button>\r\n        <button onClick= { ()=> this.minusButtonHandler()} > - </button>\r\n        <button onClick= { ()=> this.resetButtonHandler()}> Reset </button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default TeaComponent;","C:\\Users\\Stargazer\\Desktop\\Skillspire\\my-app\\homeworkapp\\src\\Components\\CounterComponent.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":42,"column":20,"nodeType":"33","endLine":42,"endColumn":30},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]